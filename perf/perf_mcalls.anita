 #
 # $Id: perf_mcalls.anita 1194 2010-04-26 08:59:28Z ptr $
 # thorn-llvm
 #
 # Benchmark for method calls, measures MCALL with
 # a few (and zero) number of parameters.
 #
 # Side measures: ASSIGN, VAR, integer arithmetics
 # 
 # History:
 # array_object ~62%
 # 
 # (c) Copyright 2010 Peter Backman. All Rights Reserved. 
 #

val main = fun() => {
	val obj = object {
		val fun1 = fun() => 1;
		val fun2 = fun(arg) => arg + 1;
		val fun3 = fun(ett, tva) => ett + tva;
		val fun4 = fun(arg) => arg;
		val fun5 = fun() => 0;
		val fun6 = fun(a, b, c) => a + b - c;
		val fun7 = fun(a) => a;
		val fun8 = fun(a, b) => a - b;		
		val fun9 = fun(a, b) => a + b;
		val fun10 = fun() => 1;
		val fun11 = fun(x) => x;
		val fun12 = fun(a, b, c, d, e) => a + b + c + d + e;
	}

	var i = 0;
	val cached_max = 2000000;
	val cached_1 = 1;
	val cached_n1 = -1;
	
	while (i < cached_max) {
		obj.fun8(
			obj.fun6(
				obj.fun4(
					obj.fun3(
						obj.fun2(
							obj.fun1()
						), 
						obj.fun12(cached_n1, cached_n1, i, cached_n1, cached_n1)
					)
				), 
				obj.fun5(), 
				obj.fun7(cached_1)
			),
			obj.fun5()
		);
		
		i = obj.fun11(obj.fun9(i, obj.fun10())); 
	}
	
}